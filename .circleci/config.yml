# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  backend-lint:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run:
          name: "Backend lint"
          command: "npm run lint-check"
          working_directory: "backend/"
  backend-type-check:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run:
          name: "Backend bd-install"
          command: "npm run db-install"
          working_directory: "backend/"
      - run:
          name: "Backend type-check"
          command: "npm run type-check"
          working_directory: "backend/"
  backend-unit-tests:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run:
          name: "Backend bd-install"
          command: "npm run db-install"
          working_directory: "backend/"
      - run:
          name: "Backend unit-tests"
          command: "npm run unit-tests"
          working_directory: "backend/"

  frontend-lint:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run:
          name: "frontend lint"
          command: "npm run lint-check"
          working_directory: "frontend/"
  frontend-type-check:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run:
          name: "Backend bd-install"
          command: "npm run db-install"
          working_directory: "backend/"
      - run:
          name: "frontend type-check"
          command: "npm run type-check"
          working_directory: "frontend/"
  frontend-unit-tests:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run:
          name: "frontend unit-tests"
          command: "npm run unit-tests"
          working_directory: "frontend/"

  build_and_deploy:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - run: sudo apt-get update && sudo apt-get install -y sshpass
      - checkout
      - run: npm install
      - run:
          command: | 
            npm run db-install
            npm run build
          working_directory: "backend/"   
      - run:
          command: npm run build
          working_directory: "frontend/"
      - run: | 
          RELEASE_DIRECTORY=$(date +"%Y%m%d-%H%M%S")
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@169.45.64.59 "mkdir /root/backend/releases/$RELEASE_DIRECTORY"
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no -r backend/release/* $USERNAME@169.45.64.59:/root/backend/releases/$RELEASE_DIRECTORY
      - run: | 
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@169.45.64.59 "rm /root/backend/current || true"
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@169.45.64.59 "ln -s /root/backend/releases/$RELEASE_DIRECTORY /root/backend/current"  
      - run: | 
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@169.45.64.59 "sudo systemctl restart backend-service"   


  release:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/node:lts
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: npm install
      - run: npm run semantic-release

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  backend-workflow:
    jobs:
      - backend-lint
      - backend-type-check
      - backend-unit-tests
  frontend-workflow:
    jobs:
      - frontend-lint
      - frontend-type-check
      - frontend-unit-tests
  cd-workflow:
    jobs:
      - release
      - build_and_deploy
